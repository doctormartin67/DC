#!/bin/bash

#This script is used to run the DC evaluation.

#****Variable Declaration****

XLext=".xls*" #This is the pattern used to find the excel extension in a string.
XLdir=${@%%${XLext}} #This is the directory name where the zip file will be extracted
lib="/home/doctormartin67/Projects/library" #THIS NEEDS UPDATING BECAUSE IT'S TOO DEPENDANT.
BINPATH="/home/doctormartin67/bin"

#****Function Declaration****

#Creates the zip file corresponding to the excel file in question.
#The zip file is then extracted into a folder with the same name as the
#excel file, minus the ".xls*" extension.

createXLzip () {
	cp "${*}" "${XLdir}.zip"
	if ! [[ -d ${XLdir} ]]
	then
		mkdir "${XLdir}"
	else
		rm -rf "${XLdir}"
		mkdir "${XLdir}"
	fi
	unzip -q "${XLdir}.zip" -d "${XLdir}"
}

#****Start run****

#Here we check the input for this script and return the syntax if input in incorrect.
if [[ $# -ne 1 ]]
then
	echo "Syntax: runDC \"Excel file\""
	exit 0
fi

#Check if excel file exists and if it does then create the zip file.
if [[ -f $1 ]] && [[ $1 =~ "xls" ]]
then
	createXLzip $1
elif [[ -d $1 ]]
then
	echo "${1} is a directory, choose an excel file."
	exit 0
else
	echo "${1} is not an excel file."
	exit 0
fi

#Create a .txt file with the sheets of the excel file listed.

if [[ -d ${lib} ]]
then
	awk -f "${lib}/sheets.awk" "${XLdir}/xl/workbook.xml" > "${XLdir}/sheets.txt"
else
	echo "${lib} does not exist."
fi

#Create a .txt file with the strings of the excel file received from the sharedStrings.xml file

if [[ -d ${lib} ]]
then
	awk -f "${lib}/ss.awk" "${XLdir}/xl/sharedStrings.xml" > "${XLdir}/ss.txt"
else
	echo "${lib} does not exist."
fi

#Create a more readable txt file for C to extract excel cells

i=1
sheet=
while [[ -f "${XLdir}/xl/worksheets/sheet${i}.xml" ]]
do
	sheet=$(awk "NR == ${i} {print}" "${XLdir}/sheets.txt")
	awk -f "${lib}/DM.awk" "${XLdir}/xl/worksheets/sheet${i}.xml" > "${XLdir}/${sheet}.txt"
	((i++))
done

#Start the program run

main "${1}"
echo "DC Program complete."

gprof "${BINPATH}/main" "gmon.out" > "gprofanalysis.txt"
echo "gprofanalysis.txt is located in ${PWD}"
exit 0
